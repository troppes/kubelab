apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubelab-user
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: default
  name: deployment-manager
rules:
- apiGroups: [""] # "" indicates the core API group
  resources: ["pods"] # remove these later
  verbs: ["get", "list", "create", "delete"]
- apiGroups: ["apps"]
  resources: ["deployments/scale"]
  verbs: ["patch"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: deployment-manager-user-binding
  namespace: default
subjects:
- kind: ServiceAccount
  name: kubelab-user # "name" is case sensitive
  namespace: default
roleRef: # "roleRef" specifies the binding to a Role / ClusterRole
  kind: Role # this must be Role or ClusterRole
  name: deployment-manager # this must match the name of the Role or ClusterRole you wish to bind to
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Secret
metadata:
  name: kubelab-user-token
  annotations:
    kubernetes.io/service-account.name: kubelab-user
type: kubernetes.io/service-account-token